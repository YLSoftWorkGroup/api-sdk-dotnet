using log4net;
using MCTech.OpenApi.Sdk;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Utility;
namespace ApiSample
{
    class Program
    {
        private const string accessId = "";
        private const string secretKey = "";
        private const string baseUrl = "";

        private static OpenApiClient client = new OpenApiClient(baseUrl, accessId, secretKey);

        /// <summary>
        /// 测试oss文件获取
        /// </summary>
        /// <returns></returns>
        static string ossGetFiles() {
            string apiStr = "/mquantity/fs/accesses";
            string jsonData = "{\"imgParameters\":\"image/resize,h_400,w_800\",\"expires\":15,\"keys\":[\"attachment/de4317f0-4695-4d7b-ae7e-959aab1c02b5.png\"],\"product\":\"cbaseinfo\",\"type\":\"img\" }";
            RequestResult result = client.Post(apiStr, jsonData);
            string ossResult = result.GetContent();
            Console.WriteLine(ossResult);
            Console.ReadKey();
            return ossResult;
        }

        /// <summary>
        ///  文件上传
        /// </summary>
        /// <returns></returns>
        static Boolean ossFilesUpload()
        {
            string apiStr = "/mquantity/fs/form-signature";
            string jsonData = "{\"product\":\"mquantity\",\"expires\":15,\"keys\":[\"weight/test.jpg\"],\"autoGenerated\":\"true\" }";
            RequestResult result = client.Post(apiStr, jsonData);
            string ossResult = result.GetContent();
            Console.WriteLine(ossResult);
            List<Signature> list = new List<Signature>();
            list = JsonConvert.DeserializeObject<List<Signature>>(ossResult);
            string responseText = "";
            string filepath = "F://123.jpg";
            //log.WriteBaseLog(despath);
            byte[] fileBytes = null; //Convert.FromBase64String(currStr);
            if (!string.IsNullOrEmpty(filepath))
            {
                //log.WriteBaseLog(despath + filepath);
                FileInfo fi = new FileInfo(filepath);

                fileBytes = new byte[fi.Length];
                FileStream fs = fi.OpenRead();
                //log.WriteBaseLog("转换的二进制长度:" + fs.Length.ToString());
                fs.Read(fileBytes, 0, Convert.ToInt32(fs.Length));
                fs.Close();
            }
            Signature signature = new Signature();
            signature = list[0];
            HttpRequestClient httpRequestClient = new HttpRequestClient();
            if (signature.type == "native")
            {
                //log.WriteBaseLog("私有云");
                httpRequestClient.SetFieldValue("FSSAccessKeyId", signature.accessId);
            }
            else
            {
                // log.WriteBaseLog("公有云");
                httpRequestClient.SetFieldValue("OSSAccessKeyId", signature.accessId);
            }

            httpRequestClient.SetFieldValue("policy", signature.policy);
            httpRequestClient.SetFieldValue("Signature", signature.signature);
            httpRequestClient.SetFieldValue("key", signature.uploadKey);
            httpRequestClient.SetFieldValue("Content-Disposition", "attachment;filename=" + signature.savedKey);
            httpRequestClient.SetFieldValue("expires", signature.accessId);
            httpRequestClient.SetFieldValue("Content-Type", "text/plain");
            httpRequestClient.SetFieldValue("file", signature.key, "application/octet-stream", fileBytes);
            string url = "";
            if (signature.type == "native")
            {
                url = "http://" + signature.endpoint + "/fss/" + signature.bucketName;
            }
            else
            {
                url = "http://" + signature.bucketName + "." + signature.endpoint;
            }
            bool resultb =  httpRequestClient.Upload(url, out responseText);
            Console.WriteLine(resultb);
            Console.ReadKey();
            return resultb;
        }
        static void Main(string[] args)
        {
            // ossGetFiles();
            ossFilesUpload();
        }

        
    }
}
